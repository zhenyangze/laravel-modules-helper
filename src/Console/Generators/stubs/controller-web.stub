<?php

namespace DummyNamespace;

use DummyModelNameSpace;
use DummyCreateRequestNameSpace;
use DummyUpdateRequestNameSpace;
use DummyDeleteRequestNameSpace;
use DummyResourceNameSpace;

use Illuminate\Http\Request;

use Yangze\ModulesHelper\Http\CommonController;

class DummyClass extends CommonController
{
    protected $allowFields = DummyFields;
    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function index()
    {
        DummyModelClassName = DummyModelClass::paginate(15);
        return view("DummyModuleName::DummyBaseClass.index", [
            'DummyModelClassVariable' => DummyResource::collection(DummyModelClassName)
        ]);
    }

    /**
     * Create resource page
     *
     * @return \Illuminate\Http\Response
    */
    public function create()
    {
        return $this->edit();
    }

    /**
     * Edit resource page
     *
     * @param $id
     *
     * @return \Illuminate\Http\Response 
     */
    public function edit($id = 0)
    {
        if ($id > 0) {
            DummyModelClassName = DummyModelClass::find($id);
        } else {
            DummyModelClassName = new DummyModelClass;
        }

        return view("DummyModuleName::DummyBaseClass.edit", [
            'DummyModelClassVariable' => DummyModelClassName,
        ]);
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\Response
     */
    public function store(DummyCreateRequest $request)
    {
        $input = $request->only($this->allowFields);
        DummyModelClassName = DummyModelClass::create($input);

        return back()->with('success', 'store success');
    }

    /**
     * Display the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function show($id)
    {
        DummyModelClassName = DummyModelClass::find($id);
        if (empty(DummyModelClassName)) {
            return $this->sendNotFound();
        }

        return view("DummyModuleName::DummyBaseClass.show", [
            'DummyModelClassVariable' => new DummyResource(DummyModelClassName),
        ]);
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function update(DummyUpdateRequest $request, $id)
    {
        DummyModelClassName = DummyModelClass::find($id);
        if (empty(DummyModelClassName)) {
            return $this->sendNotFound();
        }
        $input = $request->only($this->allowFields);
        DummyModelClassName->update($input);
        return back()->with('success', 'update success');
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function destroy(DummyDeleteRequest $request, $id)
    {
        DummyModelClass::destroy($id);
        return back()->with('success', 'destroy success');
    }
}
